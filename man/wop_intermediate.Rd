% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wop_intermediate.R
\name{wop_intermediate}
\alias{wop_intermediate}
\title{Calculates the weight of partitions for intermediate solution}
\usage{
wop_intermediate(
  x,
  units,
  time,
  cond,
  out,
  n_cut,
  incl_cut,
  intermediate,
  BE_cons,
  WI_cons
)
}
\arguments{
\item{x}{Calibrated pooled dataset for partitioning and minimization}

\item{units}{Units defining the within-dimension of data (time series)}

\item{time}{Periods defining the between-dimension of data (cross sections)}

\item{cond}{Conditions used for the pooled analysis}

\item{out}{Outcome used for the pooled analysis}

\item{n_cut}{Frequency cut-off for designating truth table rows as observed}

\item{incl_cut}{Inclusion cut-off for designating truth table rows as
consistent}

\item{intermediate}{A vector of directional expectations to derive intermediate solutions}

\item{BE_cons}{Inclusion (or consistency) thresholds for cross sections. 
Must be specified as a numeric vector with length equaling the number of
cross sections. Numbers correspond to the order of the cross section ID
in the data (such as years in ascending order).}

\item{WI_cons}{Inclusion (or consistency) thresholds for time series. 
Must be specified as a numeric vector with length equaling the number of
time series. Numbers correspond to the order of the time series (unit) ID
in the data (such as countries in alphabetical order).}
}
\value{
A dataframe with the weight of the partitions for pooled consistency
scores.
}
\description{
\code{wop} calculates the weight of partitions for each 
individual solution derived from the \code{\link{partition_min_inter}}
function for pooled solution parameters. It derives a a score for the
numerator and denimonator for each solution of the clustered data.
}
\examples{
data(schwarz2016)
Schwarz_WOP_Inter <- wop_intermediate(schwarz2016, units = "country", time = "year", cond = c("poltrans", "ecotrans", "reform", "conflict", 
"attention"), out = "enlarge", 1, 0.8, intermediate = c("1", "1", "1", "1", "1"))

}
